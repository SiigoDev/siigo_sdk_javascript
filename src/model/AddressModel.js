/**
 * Siigo API
 * Siigo Api v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';
import CityModel from './CityModel.js';

/**
 * The AddressModel model module.
 * @module model/AddressModel
 * @version v1
 */
class AddressModel {
    /**
     * Constructs a new <code>AddressModel</code>.
     * @alias module:model/AddressModel
     */
    constructor() { 
        
        AddressModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddressModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddressModel} obj Optional instance to populate.
     * @return {module:model/AddressModel} The populated <code>AddressModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddressModel();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('street')) {
                obj['street'] = ApiClient.convertToType(data['street'], 'String');
            }
            if (data.hasOwnProperty('interior_number')) {
                obj['interior_number'] = ApiClient.convertToType(data['interior_number'], 'String');
            }
            if (data.hasOwnProperty('exterior_number')) {
                obj['exterior_number'] = ApiClient.convertToType(data['exterior_number'], 'String');
            }
            if (data.hasOwnProperty('colony')) {
                obj['colony'] = ApiClient.convertToType(data['colony'], 'String');
            }
            if (data.hasOwnProperty('locality')) {
                obj['locality'] = ApiClient.convertToType(data['locality'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = CityModel.constructFromObject(data['city']);
            }
            if (data.hasOwnProperty('postal_code')) {
                obj['postal_code'] = ApiClient.convertToType(data['postal_code'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Represents the address of customer.
 * @member {String} address
 */
AddressModel.prototype['address'] = undefined;

/**
 * Represents the street of customer for Mexico.
 * @member {String} street
 */
AddressModel.prototype['street'] = undefined;

/**
 * Represents the interior of customer for Mexico.
 * @member {String} interior_number
 */
AddressModel.prototype['interior_number'] = undefined;

/**
 * Represents the address of exterior of customer for Mexico.
 * @member {String} exterior_number
 */
AddressModel.prototype['exterior_number'] = undefined;

/**
 * Represents the address of colony of customer for Mexico.
 * @member {String} colony
 */
AddressModel.prototype['colony'] = undefined;

/**
 * Represents the address of locality of customer for Mexico.
 * @member {String} locality
 */
AddressModel.prototype['locality'] = undefined;

/**
 * @member {module:model/CityModel} city
 */
AddressModel.prototype['city'] = undefined;

/**
 * Represent the Postal Code of customer.  For example, the code '110911'
 * @member {String} postal_code
 */
AddressModel.prototype['postal_code'] = undefined;






export default AddressModel;

