/**
 * Siigo API
 * Siigo Api v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient.js';

/**
 * The DocumentBalanceViewModel model module.
 * @module model/DocumentBalanceViewModel
 * @version v1
 */
class DocumentBalanceViewModel {
    /**
     * Constructs a new <code>DocumentBalanceViewModel</code>.
     * Defines the Siigo.SiigoAPI.Api.Application.DocumentBalance.Models.DocumentBalanceViewModel.
     * @alias module:model/DocumentBalanceViewModel
     */
    constructor() { 
        
        DocumentBalanceViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DocumentBalanceViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DocumentBalanceViewModel} obj Optional instance to populate.
     * @return {module:model/DocumentBalanceViewModel} The populated <code>DocumentBalanceViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DocumentBalanceViewModel();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('total_purchased')) {
                obj['total_purchased'] = ApiClient.convertToType(data['total_purchased'], 'Number');
            }
            if (data.hasOwnProperty('used')) {
                obj['used'] = ApiClient.convertToType(data['used'], 'Number');
            }
            if (data.hasOwnProperty('available')) {
                obj['available'] = ApiClient.convertToType(data['available'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Type of the document balance, the value is alphanumeric, this value can be 'FV' to invoices, 'NC' to credit notes
 * @member {String} type
 */
DocumentBalanceViewModel.prototype['type'] = undefined;

/**
 * Represents the total invoice purchased,  the value of this field can be an integer
 * @member {Number} total_purchased
 */
DocumentBalanceViewModel.prototype['total_purchased'] = undefined;

/**
 * Represents the total invoice used,  the value of this field can be an integer
 * @member {Number} used
 */
DocumentBalanceViewModel.prototype['used'] = undefined;

/**
 * Represents the total invoice available, the value of this field can be an integer
 * @member {Number} available
 */
DocumentBalanceViewModel.prototype['available'] = undefined;






export default DocumentBalanceViewModel;

