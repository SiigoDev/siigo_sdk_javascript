/**
 * Siigo API
 * Siigo Api v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import app from "../app.js";
import expect from "expect.js";

let instance;

before(async function() {
  let SiigoAPI = await app.initialize();
  instance = new SiigoAPI.ProductApi();
});

describe('ProductApi', function() {
  describe('createProduct', function() {
    it('should call createProduct successfully', async function() {
      try {
        let result = await instance.createProductWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('deleteProduct', function() {
    it('should call deleteProduct successfully', async function() {
      try {
        let result = await instance.deleteProductWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('getProduct', function() {
    it('should call getProduct successfully', async function() {
      try {
        let result = await instance.getProductWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('getProducts', function() {
    it('should call getProducts successfully', async function() {
      try {
        let result = await instance.getProductsWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('updateProduct', function() {
    it('should call updateProduct successfully', async function() {
      try {
        let result = await instance.updateProductWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
});

