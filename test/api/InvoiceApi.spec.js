/**
 * Siigo API
 * Siigo Api v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import app from "../app.js";
import expect from "expect.js";

let instance;

before(async function() {
  let SiigoAPI = await app.initialize();
  instance = new SiigoAPI.InvoiceApi();
});

describe('InvoiceApi', function() {
  describe('annulInvoice', function() {
    it('should call annulInvoice successfully', async function() {
      try {
        let result = await instance.annulInvoiceWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('createInvoice', function() {
    it('should call createInvoice successfully', async function() {
      try {
        let result = await instance.createInvoiceWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('deleteInvoice', function() {
    it('should call deleteInvoice successfully', async function() {
      try {
        let result = await instance.deleteInvoiceWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('getElectronicInvoiceErrors', function() {
    it('should call getElectronicInvoiceErrors successfully', async function() {
      try {
        let result = await instance.getElectronicInvoiceErrorsWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('getInvoice', function() {
    it('should call getInvoice successfully', async function() {
      try {
        let result = await instance.getInvoiceWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('getInvoicePDF', function() {
    it('should call getInvoicePDF successfully', async function() {
      try {
        let result = await instance.getInvoicePDFWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('getInvoices', function() {
    it('should call getInvoices successfully', async function() {
      try {
        let result = await instance.getInvoicesWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('sendElectronicInvoice', function() {
    it('should call sendElectronicInvoice successfully', async function() {
      try {
        let result = await instance.sendElectronicInvoiceWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('sendInvoiceByEmail', function() {
    it('should call sendInvoiceByEmail successfully', async function() {
      try {
        let result = await instance.sendInvoiceByEmailWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
  describe('updateInvoice', function() {
    it('should call updateInvoice successfully', async function() {
      try {
        let result = await instance.updateInvoiceWithHttpInfo({});
        expect(result.response.statusCode).to.be.greaterThan(199);
        expect(result.response.statusCode).to.be.lessThan(300);
      } catch (error) {
        expect(error.status).to.be.greaterThan(399);
        expect(error.status).to.be.lessThan(500);
      }      
    });
  });
});

